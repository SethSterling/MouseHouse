@model IEnumerable<MouseHouse.Models.Product>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor http

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    // colorString changes value when a color option is selected
    ViewData["colorString"] = null;
}

<h1>Index</h1>

<!-- Sorting section displaying different options for sorting/filtering products on Catalog page -->
<!-- TODO: inside the <a> tags, redirect the user to the page again with a sorted list of Products-->
<div class="option-menu">
    <ul class="option-list">
        <!-- Price -->
        <l1 class="option">
            <button type="button" class="btn btn-light btn-option" data-toggle="dropdown">Price</button>
            <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel" data-target="#" href="/page.html">
                <!-- Price: Lowest to Highest (ascending)-->
                <li>
                    <a asp-action="Index" 
                       asp-route-colorString="@ViewData["currentColorFilter"].ToString()"
                       asp-route-sortOrder="low_price"
                       class="btn btn-link">Low to High</a>
                </li>
                <!-- Price: Higest to Lowest (descending)-->
                <li>
                    <a asp-action="Index" 
                       asp-route-colorString="@ViewData["currentColorFilter"].ToString()"
                       asp-route-sortOrder="high_price"
                       class="btn btn-link">High to Low</a>
                </li>
            </ul>
        </l1>

        <!-- Name / Title  (alphabetical/ascending) -->
        <li class="option">
            <a asp-action="Index" 
               asp-route-colorString="@ViewData["currentColorFilter"].ToString()"
               asp-route-sortOrder="alphabetical"
               class="btn btn-light btn-option">Name</a>
        </li>

        <!-- Width (most to least amount of inches wide/descending )-->
        <li class="option">
            <a asp-action="Index" 
               asp-route-colorString="@ViewData["currentColorFilter"].ToString()"
               asp-route-sortOrder="width"
               class="btn btn-light btn-option">Width</a>
        </li>

        <!-- Height (most to least amount of inches tall/descending ) -->
        <li class="option">
            <a asp-action="Index" 
               asp-route-colorString="@ViewData["currentColorFilter"].ToString()"
               asp-route-sortOrder="height"
               class="btn btn-light btn-option">Height</a>
        </li>

        <!-- Length (most to least inches deep/descending )-->
        <li class="option">
            <a asp-action="Index" 
               asp-route-colorString="@ViewData["currentColorFilter"].ToString()"
               asp-route-sortOrder="length"
               class="btn btn-light btn-option">Length</a>
        </li>

        <!-- Color (different colors to choose) -->
        <li class="option">
            <button type="button" class="btn btn-light btn-option" data-toggle="dropdown">Color</button>
            <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel" data-target="#" href="/page.html">
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="White"
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">White</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Black" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()" 
                       class="btn btn-link">Black</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Brown" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Brown</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Grey" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Grey</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Green" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Green</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Beige" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Beige</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Yellow" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Yellow</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Blue" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Blue</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Red" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Red</a>
                </li>
                <li>
                    <a asp-action="Index"
                       asp-route-colorString="Turquoise" 
                       asp-route-sortOrder="@ViewData["currentSort"].ToString()"
                       class="btn btn-link">Turquoise</a>
                </li>
            </ul>
        </li>

        <!-- Resets all options/filters applied to view (shows default page)-->
        <li class="option">
            <a asp-action="Index"
               asp-route-colorString=@String.Empty
               asp-route-sortOrder=@String.Empty
               class="btn btn-light btn-option">Clear</a>
        </li>
    </ul>
</div>

@{
    string prevUrl = http.HttpContext.Request.Path;
}
@foreach (var item in Model)
{
    <div class="card card-body">
        @{
            string ImagePath = item.ImageUrl;
        }
        <a asp-action="Details" asp-route-id="@item.ProductId">
            <div class="card-image">
                <img src="~/@ImagePath" />
            </div>
        </a>
        <h5 class="card-title card border-light">@item.Title</h5>
<p class="card-category">@item.Category</p>
        <p class="card-price">$@item.Price</p>
        <div class="card-cart">
            <a class="btn btn-outline-primary" asp-route-id="@item.ProductId" asp-route-prevUrl="@prevUrl" asp-controller="Cart" asp-action="Add">
                <!-- Cart icon -->
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-cart-plus-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1H.5zM4 14a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm7 0a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM9 5.5a.5.5 0 0 0-1 0V7H6.5a.5.5 0 0 0 0 1H8v1.5a.5.5 0 0 0 1 0V8h1.5a.5.5 0 0 0 0-1H9V5.5z" />
                </svg>
            </a>
        </div>
    </div>
}
